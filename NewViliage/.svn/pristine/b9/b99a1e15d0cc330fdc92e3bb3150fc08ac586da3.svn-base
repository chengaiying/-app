<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
<title>农业信息采集</title>
<link href="./css/style.css" rel="stylesheet" type="text/css" />
<link href="./info.css" rel="stylesheet" type="text/css" />
<style>
	canvas{width: 100%;border: 1px solid #000000;}
</style>
</head>

<body>


<!--
<img src="img/1.jpg" width="100%" />
<div class="form_title">
<span class="form_title_name">土地信息</span>
<span class="form_help">填报帮助</span>
</div>


<form id="formInfo">
<div class="form_group">
</div>
</form>
<div class="border_top_1px"></div>

<div class="form_button1" id="mybtn" onclick="formJumpBtn();"><div class="form_button_txt1">提交</div></div>
<script type="text/javascript">
function formJumpBtn(){
	doSubmit();
    var mydiv = document.getElementById('mybtn');
    mydiv.style.backgroundColor="#0091cb";  
}

</script>-->


</body>


<script type="text/javascript" src="js/jquery-2.1.4.min.js"></script>
<script type="text/javascript" src="js/jquery.validate.min.js"></script>
<script type="text/javascript" src="js/jquery-html5Validate.js"></script>
<script type="text/javascript" src="js/swiper.min.js"></script>
<script type="text/javascript" src="js/ajaxfileupload.js"></script>
<script type="text/javascript">
	var imgUpdate = true;
	$(document).ready(function() {
		//如果进入到该页面说明已经进行了授权，直接获取信息直报的字段结构
		getFormStructure(); 
    });
	
	//获取URL中的活动id参数
    function getUrlParam(paraName) {
        var reg = new RegExp("(^|&)" + paraName + "=([^&]*)(&|$)"); //构造一个含有目标参数的正则表达式对象
        var retStr = window.location.search.substr(1).match(reg);  //匹配目标参数
        var ret = unescape(retStr[2]);
        return ret;
    }
	
	//获得表单中的结构信息
	function getFormStructure() {
		$.post("/NewViliage/api/form/formDefDetail?form_id=" + getUrlParam("form_id"), function(data, textStatus) {
			if (textStatus == 'success' && data != null) {
				if (data.code==0) {
					var htmlTest;
					$(document.body).empty();
					$(document.body).append("<img src=\"img/1.jpg\" width=\"100%\" /><div class=\"form_title\"><span class=\"form_title_name\">土地信息</span><span class=\"form_help\">填报帮助</span></div>");
					$(document.body).append("<form id=\"formInfo\"><div class=\"form_group\"></div></form><div class=\"border_top_1px\"></div>");
					$(document.body).append("<div class=\"form_button1\" id=\"mybtn\" onclick=\"formJumpBtn();\"><div class=\"form_button_txt1\">提交</div></div>");
					
					$(".form_title_name").html(data.result.formName);
					$("img").attr("src","/storage/" + data.result.bootImg);
					
					$(".form_group").empty();
					$(".form_group").append("<input type=\"hidden\" name=\"form_id\" value=" + data.result.id + "></input>");
					$.each(data.result.formWords, function(n, value) {
						if (value != null) {
							htmlTest = AddFormStructure(n,value);
							$(".form_group").append(htmlTest);
						}
					});
					$(document.body).append("<br /><br />");
				}
				else {
					alert('表单结构获取失败' + data.desc);
				}
			}
		}, 'json');
	}
	
	function formJumpBtn(){
		var mydiv = document.getElementById('mybtn');
		mydiv.style.backgroundColor="#0091cb";  
		doSubmit();
	}
	
	//根据不同的类型设置表单中的结构
	function AddFormStructure(n,value) {
		var htmlTmp = "<div id=\"" + "table_" + n + "\">";
		htmlTmp = htmlTmp + "<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"form_item\"><tr valign=\"top\"><td class=\"form_item_margin\"></td>";
		htmlTmp = htmlTmp + "<td class=\"form_item_name\">" + value.display + "</td>";
		if (value.dataType == 1) {
			htmlTmp = htmlTmp + "<td class=\"form_item_input\" align=\"right\">";
			htmlTmp = htmlTmp + "<input id=\"" + n + "\" type=\"text\" name=" + value.paramName +" placeholder=\"请填写\" size=\"15\"" ;
			if (value.required == 1) {
				htmlTmp = htmlTmp + " required";
			}
			htmlTmp = htmlTmp + "  data-min=\"" + value.lenMinLimit + "\"";
			htmlTmp = htmlTmp + "  data-max=\"" + value.lenMaxLimit + "\"";
			htmlTmp = htmlTmp + " /></td>";
			htmlTmp = htmlTmp + "<td class=\"form_item_no_unit\"></td>";
			htmlTmp = htmlTmp + "</tr></table>";
		}
		if (value.dataType == 2) {
			htmlTmp = htmlTmp + "<td class=\"form_item_input\" align=\"right\">";
			htmlTmp = htmlTmp + "<input id=\"" + n + "\" type=\"number\" name=" + value.paramName +" placeholder=\"请填写\" size=\"15\""; 
			if (value.required == 1) {
				htmlTmp = htmlTmp + " required";
			}
			htmlTmp = htmlTmp + " min=\"" + value.minLimit + "\"";
			htmlTmp = htmlTmp + " max=\"" + value.maxLimit + "\"";
			if (value.dotNum != null && value.dotNum != undefined) {
				var ndotNum = 1;
				for (var i = 0;i < value.dotNum;i++) {
					ndotNum = ndotNum / 10;
				}
				
				htmlTmp = htmlTmp + " step=\"" + ndotNum + "\"";
			}
			
			
			htmlTmp = htmlTmp + " /></td>";
			if (value.unit == null || value.unit == undefined) {
				htmlTmp = htmlTmp + "<td class=\"form_item_no_unit\"></td>";
			}
			else {
				htmlTmp = htmlTmp + "<td class=\"form_item_unit\">" + value.unit +"</td>";
			}
			htmlTmp = htmlTmp + "</tr></table>";
		}
		if (value.dataType == 3) {
			htmlTmp = htmlTmp + "<td class=\"form_item_input\" align=\"right\">";
			//htmlTmp = htmlTmp + "<div class=\"container\">";
			//htmlTmp = htmlTmp + "<section>";
			htmlTmp = htmlTmp + "<select name=" + value.paramName + " id=\"" + n + "\"";
			if (value.required == 1) {
				htmlTmp = htmlTmp + " required";
			}
			htmlTmp = htmlTmp + ">";
			htmlTmp = htmlTmp + "<option value=\"\" disabled selected>请选择</option>";
			
			if (value.options != null) {
				//遍历选项
				$.each(value.options,function(n,valueArray) {
					htmlTmp = htmlTmp + "<option value=\"" + valueArray + "\">" + valueArray + "</option>";
				});
			}
			htmlTmp = htmlTmp + "</select>";
			//htmlTmp = htmlTmp + "</section>";
			//htmlTmp = htmlTmp + "</div>";
			htmlTmp = htmlTmp + "</td><td class=\"form_item_no_unit\"></td></tr></table>";
		}
		if (value.dataType == 4) {
			if (value.required == 1) {
				imgUpdate = false;
			}
			htmlTmp = htmlTmp + "<td class=\"form_item_jump form_item_file\" align=\"right\">";
			htmlTmp = htmlTmp + "<input id=" + "file_" + n;
			var paramname =  "form_" +  getUrlParam("form_id") + "_" + value.paramName;
			htmlTmp = htmlTmp + " class=\"form_input_file\" type=\"file\" name=\"" + paramname + "\" onChange=\"ajaxfile('" + n + "','" + paramname + "');\" />";
			htmlTmp = htmlTmp + "<span id=\"J_photoReplace_" + n + "\" class=\"form_input_file_img\" ><img id=\"J_imgHere_" + n +"\" src=\"./img/addphoto.png\" width=\"40px\" /></span>";
			htmlTmp = htmlTmp + "<span id=\"J_photoHere_wrap_" + n + "\" class=\"form_input_file_photo\" style=\"display: none;\"><img id=\"J_photoHere_" + n +"\" src=\"\" width=\"40px\" /></span>";
			htmlTmp = htmlTmp + "</td></tr></table>";
		}
		if (value.dataType == 5) {
			htmlTmp = htmlTmp + "<td class=\"form_item_input\" align=\"right\"><input type=\"text\" placeholder=\"请选择日期\" onfocus=\"(this.type='date')\"  onblur=\"if(this.value=='') this.type='text'\" name=\"" + value.paramName + "\"";
			if (value.required == 1) {
				htmlTmp = htmlTmp + " required";
			}
			htmlTmp = htmlTmp + " /></td>";
			htmlTmp = htmlTmp + "<td class=\"form_item_no_unit\"></td></tr></table>";
		}
		if (value.dataType == 6) {
			htmlTmp = htmlTmp + "<td class=\"form_item_content\" align=\"right\" onclick=\"checkSel('" + "check_" + n +"')\">请勾选</td>";
			htmlTmp = htmlTmp + "<td class=\"form_item_no_unit\"></tr></table>";
			
			htmlTmp = htmlTmp + "<div id=\"" + "check_" + n + "\" class=\"form_check_group\">";
			
			if (value.options != null) {
				//遍历选项
				$.each(value.options,function(n,valueArray) {
					htmlTmp = htmlTmp + "<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"form_check_item\">";
					htmlTmp = htmlTmp + "<tr valign=\"top\"><td class=\"form_check_margin\"></td>";
					htmlTmp = htmlTmp + "<td class=\"form_check_name\">" + valueArray + "</td>";
					htmlTmp = htmlTmp + "<td align=\"right\" class=\"form_check_input\" >";
					htmlTmp = htmlTmp + "<input type=\"checkbox\" name=\"" + value.paramName + "\"" + "value=\"" + valueArray +"\""; 
					htmlTmp = htmlTmp + "/>";
					htmlTmp = htmlTmp + "</td></tr></table>";
				});
			}
			htmlTmp = htmlTmp + "</div>";
			
		}
		if (value.div == 1) {
			htmlTmp = htmlTmp + "<div class=\"form_item_gap\"></div>";
		}
		htmlTmp = htmlTmp + "</div>"
		return htmlTmp;
	}
	
	function checkSel(check_id){
		$("#" + check_id).slideToggle(100);
	}
	
	//图片上传
	function ajaxfile(upid,paramname) {
		var fileid = "file_" + upid;
		//得到文件
		var files =  document.getElementById(fileid).files;
		for (var i = 0, f; f = files[i]; i++) {
 
	      if (!f.type.match('image.*')) {
	        continue;
	      }
	      console.log("size:" + f.size);
		  var fsize = f.size;
	      var reader = new FileReader();
	      reader.onload = (function(theFile) {
	        return function(e) {
	          //var i = document.getElementById("J_imgHere_" + upid);
			  var img = new Image();
	          img.src = event.target.result;
	          //$(i).css('width',$(i).width()/10+'px');
			  var imgsrc = img.src;
			  if (img.complete) {
				  callback();
			  }
			  else {
				  img.onload = callback;
			  }
			  function callback() {
				  if (imgsrc.length > 102400) {
					  imgsrc = compress(img);
			 	  }
				  
				  $.post('/NewViliage/api/file/uploadByBase64' , { file:imgsrc,file_param_name:paramname}, function(data) {
					  if (data.code==0) {
						  $("#J_photoHere_wrap_" + upid).show();
				  		  //var imgsrc = compress(i,quality).src;
				  	      $("#J_photoHere_" + upid).attr('src', imgsrc);
				          $("#J_photoReplace_" + upid).hide();
						  imgUpdate = true;
						  //alert('上传成功');
					  } 
					  else {
						  alert('上传失败');
					  }
				  }, "json");
				  img = null;
			  }
	          
			  
	          //i.src = compress(i,quality).src;
	          //i.style.display = "block";
	        };
	      })(f);
	      reader.readAsDataURL(f);
	    }
		//发送上传
		//var imgUpdate = document.getElementById("J_photoHere_" + upid);
		
		//$(document.body).append("<form id=\"formImg\" type=\"hidden\"></form>");
		//$("#formImg").append("<input type=\"text\" name=" + paramname +" value=\"请填写\" />");
		
		
//		$.ajaxFileUpload({
//			url: '/NewViliage/api/file/upload/', //处理图片脚本
//			secureuri: false,
//			fileElementId: fileid, //file控件id
//			dataType: 'json',
//			success: function(data, status) {
//				if(data.code == 0) {
//					var h = "/storage/"
//					alert('上传成功');
//					$("#J_photoHere_wrap_" + upid).show();
//					$("#J_photoHere_" + upid).attr('src', h+data.result);
//					$("#J_photoReplace_" + upid).hide();
//					imgUpdate = true;
//
//				} 
//				else {
//					alert("图片过大");
//				}
//			},
//			error: function(data, status, e) {
//				alert(e);
//			}
//		})
	}
	
	
	function compress(source_img_obj, quality, output_format){
         var mime_type = "image/jpeg";
         if(output_format!=undefined && output_format=="png"){
            mime_type = "image/png";
         }

         var cvs = document.createElement('canvas');
         //naturalWidth真实图片的宽度
         cvs.width = source_img_obj.naturalWidth;
         cvs.height = source_img_obj.naturalHeight;
         var ctx = cvs.getContext("2d").drawImage(source_img_obj, 0, 0);
         var newImageData = cvs.toDataURL(mime_type, quality/100);
         var result_image_obj = new Image();
         result_image_obj.src = newImageData;
         console.log(newImageData);
         return result_image_obj;
    }
	
	function compress(img) {
		
		// 用于压缩图片的canvas
		var canvas = document.createElement("canvas");
		var ctx = canvas.getContext('2d');
		// 瓦片canvas
		var tCanvas = document.createElement("canvas");
		var tctx = tCanvas.getContext("2d");
		var maxsize = 500 * 1024;
		
        var initSize = img.src.length;
        var width = img.width;
        var height = img.height;

        //如果图片大于四百万像素，计算压缩比并将大小压至400万以下
        var ratio;
        if ((ratio = width * height / 4000000)>1) {
            ratio = Math.sqrt(ratio);
            width /= ratio;
            height /= ratio;
        }else {
            ratio = 1;
        }

        canvas.width = width;
        canvas.height = height;

//        铺底色
        ctx.fillStyle = "#fff";
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        //如果图片像素大于100万则使用瓦片绘制
        var count;
        if ((count = width * height / 1000000) > 1) {
            count = ~~(Math.sqrt(count)+1); //计算要分成多少块瓦片

//            计算每块瓦片的宽和高
            var nw = ~~(width / count);
            var nh = ~~(height / count);

            tCanvas.width = nw;
            tCanvas.height = nh;

            for (var i = 0; i < count; i++) {
                for (var j = 0; j < count; j++) {
                    tctx.drawImage(img, i * nw * ratio, j * nh * ratio, nw * ratio, nh * ratio, 0, 0, nw, nh);

                    ctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);
                }
            }
        } else {
            ctx.drawImage(img, 0, 0, width, height);
        }

        //进行最小压缩
        var ndata = canvas.toDataURL("image/jpeg", 0.1);

        console.log("压缩前：" + initSize);
        console.log("压缩后：" + ndata.length);
        console.log("压缩率：" + ~~(100 * (initSize - ndata.length) / initSize) + "%");

        tCanvas.width = tCanvas.height = canvas.width = canvas.height = 0;

        return ndata;
    }
	
	
	function doSubmit() {
		if ($.html5Validate.isAllpass($("#formInfo"))) {
			if (!imgUpdate) {
				$("#mybtn").testRemind("请上传文件!");
			}
			else {
				$.post("/NewViliage/api/form/submit", $("#formInfo").serialize(), function(data, textStatus){
					if (textStatus == 'success' && data != null) {
						if (data.code == 0) {
							location.href="/NewViliage/info/form_view.html?form_id=" + getUrlParam("form_id");
							//alert("提交成功!");
						} else {
							alert("submit failed：" + data.desc);
						}
					}
				}, "json");
			}
			
   		}
		
//		$("#formInfo").validate({ 		
//			submitHandler: function (form) {
//				//这里是jquery表单验证通过的时候执行的操作，比如这里，表单验证通过的时候执行了jquery的ajax的post操作      
//				$.post("/NewViliage/api/form/submit", $("#formInfo").serialize(), function(data, textStatus){
//					if (textStatus == 'success' && data != null) {
//						if (data.code == 0) {
//							location.href="/NewViliage/info/form_view.html?form_id=" + getUrlParam("form_id");
//							//alert("提交成功!");
//						} else {
//							alert("submit failed：" + data.desc);
//						}
//					}
//				}, "json");
//			}
//		});
		
		
//		$.post("/NewViliage/api/form/submit", $("form").serialize(), function(data, textStatus){
//			if (textStatus == 'success' && data != null) {
//				if (data.code == 0) {
//					location.href="/NewViliage/info/form_view.html?form_id=" + getUrlParam("form_id");
//					//alert("提交成功!");
//				} else {
//					alert("submit failed：" + data.desc);
//				}
//			}
//		}, "json");
	}
	function formJumpSelBtn(){
    	var mydiv = document.getElementById('sel_btn');
   	 	mydiv.style.backgroundColor="#f8f8f8";  
	}
	
	//验证字符串长度
	function CheckText(n,lenMinLimit,lenMaxLimit) {
		if ($("#" + n).val().length < lenMinLimit) {
			alert("字符串长度过短");
			$("#" + n).val("");
		}
		if ($("#" + n).val().length > lenMaxLimit) {
			alert("字符串长度过长");
			$("#" + n).val("");
		}
		
	}
	
	//验证数字的范围
	function CheckNum(n,minLimit,maxLimit) {
		if (isNaN($("#" + n).val())) {
			alert("请输入数字");
			$("#" + n).val("");
		}
		if ($("#" + n).val() < minLimit) {
			alert("数字太小");
			$("#" + n).val("");
		}
		if ($("#" + n).val().length > maxLimit) {
			alert("数字太大");
			$("#" + n).val("");
		}
		
	}
	
	
	/*   
 * MAP对象，实现MAP功能   
 *   
 * 接口：   
 * size()     获取MAP元素个数   
 * isEmpty()    判断MAP是否为空   
 * clear()     删除MAP所有元素   
 * put(key, value)   向MAP中增加元素（key, value)    
 * remove(key)    删除指定KEY的元素，成功返回True，失败返回False   
 * get(key)    获取指定KEY的元素值VALUE，失败返回NULL   
 * element(index)   获取指定索引的元素（使用element.key，element.value获取KEY和VALUE），失败返回NULL   
 * containsKey(key)  判断MAP中是否含有指定KEY的元素   
 * containsValue(value) 判断MAP中是否含有指定VALUE的元素   
 * values()    获取MAP中所有VALUE的数组（ARRAY）   
 * keys()     获取MAP中所有KEY的数组（ARRAY）   
 *   
 * 例子：   
 * var map = new Map();   
 *   
 * map.put("key", "value");   
 * var val = map.get("key")   
 * ……   
 *   
 */     
	function Map() {     
		this.elements = new Array();     
		   
		//获取MAP元素个数     
		this.size = function() {     
			return this.elements.length;     
		}     
		   
		//判断MAP是否为空     
		this.isEmpty = function() {     
			return(this.elements.length < 1);     
		}     
		   
		//删除MAP所有元素     
		this.clear = function() {     
			this.elements = new Array();     
		}     
		   
		//向MAP中增加元素（key, value)      
		this.put = function(_key, _value) {     
			this.elements.push( {     
				key : _key,     
				value : _value     
			});     
		}     
		   
		//删除指定KEY的元素，成功返回True，失败返回False     
		this.remove = function(_key) {     
			var bln = false;     
			try{     
				for(i = 0; i < this.elements.length; i++) {     
					if(this.elements[i].key == _key) {     
						this.elements.splice(i, 1);     
						return true;     
					}     
				}     
			} catch(e) {     
				bln = false;     
			}     
			return bln;     
		}     
		   
		//获取指定KEY的元素值VALUE，失败返回NULL     
		this.get = function(_key) {     
			try{     
				for(i = 0; i < this.elements.length; i++) {     
					if(this.elements[i].key == _key) {     
						return this.elements[i].value;     
					}     
				}     
			} catch(e) {     
				return null;     
			}     
		}     
		   
		//获取指定索引的元素（使用element.key，element.value获取KEY和VALUE），失败返回NULL     
		this.element = function(_index) {     
			if(_index < 0 || _index >= this.elements.length) {     
				return null;     
			}     
			return this.elements[_index];     
		}     
		   
		//判断MAP中是否含有指定KEY的元素     
		this.containsKey = function(_key) {     
			varbln = false;     
			try{     
				for(i = 0; i < this.elements.length; i++) {     
					if(this.elements[i].key == _key) {     
						bln = true;     
					}     
				}     
			} catch(e) {     
				bln = false;     
			}     
			return bln;     
		}     
		   
		//判断MAP中是否含有指定VALUE的元素     
		this.containsValue = function(_value) {     
			var bln = false;     
			try{     
				for(i = 0; i < this.elements.length; i++) {     
					if(this.elements[i].value == _value) {     
						bln = true;     
					}     
				}     
			} catch(e) {     
				bln = false;     
			}     
			return bln;     
		}     
		   
		//获取MAP中所有VALUE的数组（ARRAY）     
		this.values = function() {     
			var arr = new Array();     
			for(i = 0; i < this.elements.length; i++) {     
				arr.push(this.elements[i].value);     
			}     
			return arr;     
		}     
		   
		//获取MAP中所有KEY的数组（ARRAY）     
		this.keys = function() {     
			var arr = new Array();     
			for(i = 0; i < this.elements.length; i++) {     
				arr.push(this.elements[i].key);     
			}     
			return arr;     
		}     
	} 

</script>


</html>
